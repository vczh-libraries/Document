<Document symbolId="vl::parsing::xml::XmlGetElement@::vl::Ptr&lt;::vl::parsing::xml::XmlElement&gt;(::vl::Ptr&lt;::vl::parsing::xml::XmlElement&gt;, ::vl::WString const &amp;)" accessor="" category="Function" name="XmlGetElement" declFile="ParsingXml.h" declId="FB$vl::parsing::xml::XmlGetElement@::vl::Ptr&lt;::vl::parsing::xml::XmlElement&gt;(::vl::Ptr&lt;::vl::parsing::xml::XmlElement&gt;, ::vl::WString const &amp;)[decl0]"><summary>Try to read a sub element in an XML element.</summary><returns>The expected sub element. Returns null if it doesn&apos;t exist. If there are multiple elements of the expected name, returns the first one.</returns><param name="element">The element to find the sub element.</param><param name="name">The name of the sub element.</param><signature><![CDATA[Ptr<XmlElement> XmlGetElement(
    Ptr<XmlElement> element,
    WString const & name
);
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="WString" docId="vl::WString" declFile="String.h" declId="NI$vl::WString"/><symbol name="XmlElement" docId="vl::parsing::xml::XmlElement" declFile="ParsingXml_Ast.h" declId="NI$vl::parsing::xml::XmlElement"/></seealsos></Document>