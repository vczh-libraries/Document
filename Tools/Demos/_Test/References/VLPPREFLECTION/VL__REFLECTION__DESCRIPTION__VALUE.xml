<Document symbolId="vl::reflection::description::Value" accessor="" category="Class" name="Value" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::Value"><summary>A type to store all values of reflectable types.</summary><remarks>
 To convert between <b>Value</b> and its real C++ type, the following functions are recommended:
 <ul><li><symbol name="BoxValue" docId="vl::reflection::description::BoxValue@::vl::reflection::description::Value([T] const &amp;, ::vl::reflection::description::ITypeDescriptor *)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::BoxValue@::vl::reflection::description::Value([T] const &amp;, ::vl::reflection::description::ITypeDescriptor *)[impl0]"/></li><li><symbol name="UnboxValue" docId="vl::reflection::description::UnboxValue@[T](::vl::reflection::description::Value const &amp;, ::vl::reflection::description::ITypeDescriptor *, ::vl::WString const &amp;)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::UnboxValue@[T](::vl::reflection::description::Value const &amp;, ::vl::reflection::description::ITypeDescriptor *, ::vl::WString const &amp;)[impl0]"/></li><li><symbol name="BoxParameter" docId="vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)[impl0]"/></li><li><symbol name="UnboxParameter" docId="vl::reflection::description::UnboxParameter@void(::vl::reflection::description::Value const &amp;, [T] &amp;, ::vl::reflection::description::ITypeDescriptor *, ::vl::WString const &amp;)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::UnboxParameter@void(::vl::reflection::description::Value const &amp;, [T] &amp;, ::vl::reflection::description::ITypeDescriptor *, ::vl::WString const &amp;)[impl0]"/></li></ul></remarks><signature><![CDATA[class Value
    : Object;
]]></signature><basetypes><symbol name="Object" docId="vl::Object" declFile="Basic.h" declId="NI$vl::Object"/></basetypes></Document>