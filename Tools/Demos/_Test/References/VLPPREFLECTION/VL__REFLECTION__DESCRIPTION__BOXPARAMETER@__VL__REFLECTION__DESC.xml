<Document symbolId="vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)" accessor="" category="Function" name="BoxParameter" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)[impl0]"><summary>Box an reflectable object. It supports generic types such as containers, functions (should be Func&gt;T&gt;), etc.</summary><returns>The boxed value.</returns><typeparam name="T">Type of the object.</typeparam><param name="object">The object to box.</param><param name="typeDescriptor">The type descriptor of the object (optional).</param><signature><![CDATA[template <
    typename T
>
Value BoxParameter(
    TypeInfoRetriver<T>::ResultReferenceType object,
    ITypeDescriptor * typeDescriptor /* optional */
);
]]></signature><seealsos><symbol name="ITypeDescriptor" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::ITypeDescriptor"/><symbol name="ResultReferenceType" declFile="GuiTypeDescriptorBuilder.h" declId="NI$vl::reflection::description::TypeInfoRetriver::ResultReferenceType"/><symbol name="Value" docId="vl::reflection::description::Value" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::Value"/></seealsos></Document>