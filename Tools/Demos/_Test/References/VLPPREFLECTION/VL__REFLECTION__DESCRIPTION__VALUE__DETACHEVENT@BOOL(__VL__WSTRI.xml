<Document symbolId="vl::reflection::description::Value::DetachEvent@bool(::vl::WString const &amp;, ::vl::Ptr&lt;::vl::reflection::description::IEventHandler&gt;)" accessor="public" category="Function" name="DetachEvent" declFile="GuiTypeDescriptor.h" declId="FB$vl::reflection::description::Value::DetachEvent@bool(::vl::WString const &amp;, ::vl::Ptr&lt;::vl::reflection::description::IEventHandler&gt;)[decl0]"><summary>Detach a callback function from the event.</summary><returns>Returns true if this operation succeeded.</returns><param name="name">The registered name for the event.</param><param name="handler">The event handler returned from <symbol name="AttachEvent" docId="vl::reflection::description::Value::AttachEvent@::vl::Ptr&lt;::vl::reflection::description::IEventHandler&gt;(::vl::WString const &amp;, ::vl::reflection::description::Value const &amp;)" declFile="GuiTypeDescriptor.h" declId="FB$vl::reflection::description::Value::AttachEvent@::vl::Ptr&lt;::vl::reflection::description::IEventHandler&gt;(::vl::WString const &amp;, ::vl::reflection::description::Value const &amp;)[decl0]"/>.</param><remarks><p>Only available when <b>VCZH_DEBUG_NO_REFLECTION</b> is <b>off</b>.</p></remarks><example index="0"/><signature><![CDATA[bool DetachEvent(
    WString const & name,
    Ptr<IEventHandler> handler
) const;
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="WString" docId="vl::WString" declFile="String.h" declId="NI$vl::WString"/><symbol name="IEventHandler" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::IEventHandler"/></seealsos></Document>