<Document symbolId="vl::ConditionVariable::SleepWithWriterForTime@bool(::vl::ReaderWriterLock &amp;, ::vl::vint)" accessor="public" category="Function" name="SleepWithWriterForTime" declFile="Threading.h" declId="FB$vl::ConditionVariable::SleepWithWriterForTime@bool(::vl::ReaderWriterLock &amp;, ::vl::vint)[decl0]"><summary>Bind a conditional variable with a owned writer lock and release it for a period of time. When the function returns, the condition variable is activated or it is time out, and the current thread owned the writer lock again.</summary><returns>Returns true if this operation succeeded.</returns><param name="lock">The writer lock.</param><param name="ms">Time in milliseconds.</param><remarks>This function is only available in Windows.</remarks><signature><![CDATA[bool SleepWithWriterForTime(
    ReaderWriterLock & lock,
    vint ms
);
]]></signature><seealsos><symbol name="ReaderWriterLock" docId="vl::ReaderWriterLock" declFile="Threading.h" declId="NI$vl::ReaderWriterLock"/><symbol name="vint" docId="vl::vint" declFile="Basic.h" declId="NI$vl::vint"/></seealsos></Document>