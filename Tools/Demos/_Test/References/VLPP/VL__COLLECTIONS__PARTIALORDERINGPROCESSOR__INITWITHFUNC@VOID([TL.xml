<Document symbolId="vl::collections::PartialOrderingProcessor::InitWithFunc@void([TList] const &amp;, [TFunc] &amp;&amp;)" accessor="public" category="Function" name="InitWithFunc" declFile="PartialOrdering.h" declId="FB$vl::collections::PartialOrderingProcessor::InitWithFunc@void([TList] const &amp;, [TFunc] &amp;&amp;)[impl0]"><summary>Set data for sorting, by providing a list for objects, and a function for their relationship.</summary><typeparam name="TList">Type of the list for objects. <symbol name="Array" docId="vl::collections::Array" declFile="List.h" declId="NI$vl::collections::Array"/>, <symbol name="List" docId="vl::collections::List" declFile="List.h" declId="NI$vl::collections::List"/> or <symbol name="SortedList" docId="vl::collections::SortedList" declFile="List.h" declId="NI$vl::collections::SortedList"/> are recommended.</typeparam><typeparam name="TFunc">Type of the function that defines relationships of objects.</typeparam><param name="items">List of objects for sorting.</param><param name="depFunc">Relationship of objects for sorting, both arguments are elements in &quot;items&quot;. To say that a depends on b, depFunc(a, b) must returns true.</param><example index="0"/><signature><![CDATA[template <
    typename TList, 
    typename TFunc
>
void InitWithFunc(
    TList const & items,
    TFunc && depFunc
);
]]></signature></Document>