<Document symbolId="vl::Event@&lt;void([TArgs]...)&gt;::Remove@bool(::vl::Ptr&lt;::vl::EventHandler&gt;)" accessor="public" category="Function" name="Remove" declFile="Event.h" declId="FB$vl::Event@&lt;void([TArgs]...)&gt;::Remove@bool(::vl::Ptr&lt;::vl::EventHandler&gt;)[impl0]"><summary>Remove a callback by an event handler returns from <symbols><symbol name="Add" docId="vl::Event@&lt;void([TArgs]...)&gt;::Add@::vl::Ptr&lt;::vl::EventHandler&gt;(::vl::Func&lt;void([TArgs]...)&gt; const &amp;)" declFile="Event.h" declId="FB$vl::Event@&lt;void([TArgs]...)&gt;::Add@::vl::Ptr&lt;::vl::EventHandler&gt;(::vl::Func&lt;void([TArgs]...)&gt; const &amp;)[impl0]"/><symbol name="Add" docId="vl::Event@&lt;void([TArgs]...)&gt;::Add@::vl::Ptr&lt;::vl::EventHandler&gt;(void([TArgs]...) *)" declFile="Event.h" declId="FB$vl::Event@&lt;void([TArgs]...)&gt;::Add@::vl::Ptr&lt;::vl::EventHandler&gt;(void([TArgs]...) *)[impl0]"/></symbols>.</summary><returns>Returns true if this operation succeeded.</returns><param name="handler">The event handler representing the callback.</param><signature><![CDATA[bool Remove(
    Ptr<EventHandler> handler
);
]]></signature><seealsos><symbol name="EventHandler" declFile="Event.h" declId="NI$vl::EventHandler"/><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/></seealsos></Document>