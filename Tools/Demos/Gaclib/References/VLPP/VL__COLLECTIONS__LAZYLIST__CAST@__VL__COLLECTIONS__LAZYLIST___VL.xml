<Document accessor="public" category="Function" name="Cast" declFile="Operation.h" declId="FB$vl::collections::LazyList::Cast@::vl::collections::LazyList&lt;::vl::Ptr&lt;[U]&gt;&gt;()[impl0]"><summary>Create a new lazy list with all elements casted to a new type.</summary><typeparam name="U">The new type.</typeparam><returns>The created lazy list.</returns><remarks>
 The lazy list being casted contains elements of type <symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/>.
 <symbol name="Cast" docId="vl::Ptr::Cast@::vl::Ptr&lt;[C]&gt;()" declFile="Pointer.h" declId="FB$vl::Ptr::Cast@::vl::Ptr&lt;[C]&gt;()[impl0]"/> is called on each elements.
 If some elements fail to cast, they become empty shared pointers.
 </remarks><signature><![CDATA[template <
    typename U
>
LazyList<Ptr<U>> Cast(
) const;
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="LazyList" docId="vl::collections::LazyList" declFile="Operation.h" declId="NI$vl::collections::LazyList"/></seealsos></Document>