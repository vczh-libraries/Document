<Document accessor="" category="Class" name="GlobalStorage" declFile="GlobalStorage.h" declId="NI$vl::GlobalStorage"><summary>
 Base type of all global storages.
 A global storage stores multiple values using a name.
 The &quot;BEGIN_GLOBAL_STOREGE_CLASS&quot; macro is recommended to create a global storage.
 </summary><remarks>
 All values are shared like global variables, but they are created at the first time when they need to be accessed.
 <symbol name="FinalizeGlobalStorage" docId="vl::FinalizeGlobalStorage@void()" declFile="GlobalStorage.h" declId="FB$vl::FinalizeGlobalStorage@void()[decl0]"/> is recommended after you don&apos;t need any global storages any more, it frees memory.
 </remarks><example index="0"/><signature><![CDATA[class GlobalStorage
    : Object
    , NotCopyable;
]]></signature><basetypes><symbol name="NotCopyable" docId="vl::NotCopyable" declFile="Basic.h" declId="NI$vl::NotCopyable"/><symbol name="Object" docId="vl::Object" declFile="Basic.h" declId="NI$vl::Object"/></basetypes></Document>