<Document accessor="public" category="Function" name="Except" declFile="Operation.h" declId="FB$vl::collections::LazyList::Except@::vl::collections::LazyList&lt;[T]&gt;(::vl::collections::IEnumerable&lt;[T]&gt; const &amp;)[impl0]"><summary>Create a new lazy list with elements from the lazy list, which do not appear in the second container.</summary><returns>The created lazy list. Elements in the create lazy list is in the same order as in this lazy list.</returns><param name="remains">The second container.</param><example index="0"/><signature><![CDATA[LazyList<T> Except(
    IEnumerable<T> const & remains
) const;
]]></signature><seealsos><symbol name="IEnumerable" docId="vl::collections::IEnumerable" declFile="Interfaces.h" declId="NI$vl::collections::IEnumerable"/><symbol name="LazyList" docId="vl::collections::LazyList" declFile="Operation.h" declId="NI$vl::collections::LazyList"/></seealsos></Document>