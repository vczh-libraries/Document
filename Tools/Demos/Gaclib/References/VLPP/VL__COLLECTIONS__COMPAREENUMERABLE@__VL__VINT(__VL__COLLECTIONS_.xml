<Document accessor="" category="Function" name="CompareEnumerable"><summary>Compare two enumerables.</summary><typeparam name="T">Type of elements in the first enumerable.</typeparam><typeparam name="U">Type of elements in the second enumerable.</typeparam><returns>
 Returns a positive value when the first enumerable is greater than the second enumerable.
 Returns a negative value when the first enumerable is lesser than the second enumerable.
 Returns zero when the two enumerables equal.
 </returns><param name="a">The first enumerable to compare.</param><param name="b">The second enumerable to compare.</param><remarks>
 The comparison result is similar to comparing two strings.
 When an enumerable contains no value but another one does, the empty one is lesser.
 When an enumerable is the prefix of another one, the prefix is lesser.
 When two enumerable contain the same values in the same order, they equals.
 In other cases, the results represents the comparison result of the first pair of inequal values in enumerables.
 </remarks><signature><![CDATA[template <
    typename T, 
    typename U
>
vint CompareEnumerable(
    IEnumerable<T> const & a,
    IEnumerable<U> const & b
);
]]></signature><seealsos><symbol name="IEnumerable" docId="vl::collections::IEnumerable"/><symbol name="vint" docId="vl::vint"/></seealsos></Document>