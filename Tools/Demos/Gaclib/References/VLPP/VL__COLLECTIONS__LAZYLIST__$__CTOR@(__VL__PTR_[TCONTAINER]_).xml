<Document symbolId="vl::collections::LazyList::$__ctor@(::vl::Ptr&lt;[TContainer]&gt;)" accessor="public" category="Function" name="$__ctor" declFile="Operation.h" declId="FB$vl::collections::LazyList::$__ctor@(::vl::Ptr&lt;[TContainer]&gt;)[impl0]"><summary>Create a lazy list from a container. It is very useful to <symbol name="MakePtr" declFile="Pointer.h" declId="FB$vl::MakePtr@::vl::Ptr&lt;[T]&gt;([TArgs]...)[impl0]"/> a container as an intermediate result and then put in a lazy list.</summary><typeparam name="TContainer">Type of the container.</typeparam><param name="container">The container.</param><signature><![CDATA[template <
    typename TContainer
>
 LazyList(
    Ptr<TContainer> container
);
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/></seealsos></Document>