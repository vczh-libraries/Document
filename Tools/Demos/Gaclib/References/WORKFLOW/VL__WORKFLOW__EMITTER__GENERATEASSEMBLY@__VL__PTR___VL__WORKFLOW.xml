<Document symbolId="vl::workflow::emitter::GenerateAssembly@::vl::Ptr&lt;::vl::workflow::runtime::WfAssembly&gt;(::vl::workflow::analyzer::WfLexicalScopeManager *, ::vl::workflow::IWfCompilerCallback *)" accessor="" category="Function" name="GenerateAssembly"><summary>Generate an assembly from a compiler. <symbol docId="vl::workflow::analyzer::WfLexicalScopeManager::Rebuild@void(bool, ::vl::workflow::IWfCompilerCallback *)" declFile="WfAnalyzer.h" declId="FB$vl::workflow::analyzer::WfLexicalScopeManager::Rebuild@void(bool, ::vl::workflow::IWfCompilerCallback *)[decl0]"/> should be called before using this function.</summary><returns>The generated assembly.</returns><param name="manager">The Workflow compiler.</param><param name="callback">The callback to receive progress information, could be nullptr.</param><signature><![CDATA[Ptr<runtime::WfAssembly> GenerateAssembly(
    analyzer::WfLexicalScopeManager * manager,
    IWfCompilerCallback * callback /* optional */
);
]]></signature><seealsos><symbol docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol declFile="WfAnalyzer.h" declId="NI$vl::workflow::IWfCompilerCallback"/><symbol docId="vl::workflow::analyzer::WfLexicalScopeManager" declFile="WfAnalyzer.h" declId="NI$vl::workflow::analyzer::WfLexicalScopeManager"/><symbol docId="vl::workflow::runtime::WfAssembly" declFile="WfRuntimeAssembly.h" declId="NI$vl::workflow::runtime::WfAssembly"/></seealsos></Document>