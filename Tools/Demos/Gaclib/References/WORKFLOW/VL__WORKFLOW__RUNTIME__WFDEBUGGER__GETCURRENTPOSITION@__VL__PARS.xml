<Document symbolId="vl::workflow::runtime::WfDebugger::GetCurrentPosition@::vl::parsing::ParsingTextRange const &amp;(bool, ::vl::workflow::runtime::WfRuntimeThreadContext *, ::vl::vint)" accessor="public" category="Function" name="GetCurrentPosition"><summary>Get the current position of the executing instruction in the source code.</summary><returns>The current position in the source code.</returns><param name="beforeCodegen">Set to true to apply the source code information to original source code.</param><param name="context">Specify a thread context. Set to null to use the top thread context.</param><param name="callStackIndex">Specify a call stack index. Set to null to use the top call stack item of the specified thread context.</param><signature><![CDATA[parsing::ParsingTextRange const & GetCurrentPosition(
    bool beforeCodegen /* optional */,
    WfRuntimeThreadContext * context /* optional */,
    vint callStackIndex /* optional */
);
]]></signature><seealsos><symbol docId="vl::parsing::ParsingTextRange" declFile="ParsingTree.h" declId="NI$vl::parsing::ParsingTextRange"/><symbol docId="vl::vint" declFile="Basic.h" declId="NI$vl::vint"/><symbol declFile="WfRuntime.h" declId="NI$vl::workflow::runtime::WfRuntimeThreadContext"/></seealsos></Document>