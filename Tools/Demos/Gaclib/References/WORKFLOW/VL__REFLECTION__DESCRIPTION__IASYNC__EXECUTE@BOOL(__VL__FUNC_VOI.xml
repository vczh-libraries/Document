<Document accessor="public" category="Function" name="Execute" declFile="WfLibraryPredefined.h" declId="FB$vl::reflection::description::IAsync::Execute@bool(::vl::Func&lt;void(::vl::Ptr&lt;::vl::reflection::description::CoroutineResult&gt;)&gt; const &amp;, ::vl::Ptr&lt;::vl::reflection::description::AsyncContext&gt;)[decl0]"><summary>Run this async operation.</summary><returns>Returns true when this operation succeeded. This function cannot be called twice on the same object.</returns><param name="callback">A callback to execute when the async operation finished.</param><param name="context">A context object that is accessible in Workflow script by &quot;$&quot; in an $Async coroutine (optional).</param><signature><![CDATA[bool Execute(
    Func<void(
Ptr<CoroutineResult>)> const & callback,
    Ptr<AsyncContext> context /* optional */
);
]]></signature><seealsos><symbol name="Func" declFile="Function.h" declId="NF[0]$vl::Func"/><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="AsyncContext" docId="vl::reflection::description::AsyncContext" declFile="WfLibraryPredefined.h" declId="NI$vl::reflection::description::AsyncContext"/><symbol name="CoroutineResult" docId="vl::reflection::description::CoroutineResult" declFile="WfLibraryPredefined.h" declId="NI$vl::reflection::description::CoroutineResult"/></seealsos></Document>