<Document accessor="" category="Class" name="IValueList" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueList"><summary>
 The reflectable version of readonly
 <symbol name="Array" docId="vl::collections::Array" declFile="List.h" declId="NI$vl::collections::Array"/> or
 <symbol name="List" docId="vl::collections::List" declFile="List.h" declId="NI$vl::collections::List"/></summary><remarks><symbol name="BoxParameter" docId="vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)[impl0]"/> will create a <symbol name="Value" docId="vl::reflection::description::Value" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::Value"/> storing a shared pointer to an instance of this interface from a container.</remarks><example index="0"/><signature><![CDATA[class IValueList
    : IValueReadonlyList
    , Description<IValueList>;
]]></signature><seealsos><symbol name="IValueList" docId="vl::reflection::description::IValueList" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueList"/></seealsos><basetypes><symbol name="Description" docId="vl::reflection::Description" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::Description"/><symbol name="IValueReadonlyList" docId="vl::reflection::description::IValueReadonlyList" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueReadonlyList"/></basetypes></Document>