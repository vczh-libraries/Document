<Document accessor="" category="Class" name="IValueEnumerable" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueEnumerable"><summary>The reflectable version of <symbol name="IEnumerable" docId="vl::collections::IEnumerable" declFile="Interfaces.h" declId="NI$vl::collections::IEnumerable"/>.</summary><remarks><symbol name="BoxParameter" docId="vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)" declFile="GuiTypeDescriptorBuilder.h" declId="FB$vl::reflection::description::BoxParameter@::vl::reflection::description::Value(::vl::reflection::description::TypeInfoRetriver::ResultReferenceType, ::vl::reflection::description::ITypeDescriptor *)[impl0]"/> will create a <symbol name="Value" docId="vl::reflection::description::Value" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::description::Value"/> storing a shared pointer to an instance of this interface from an enumerable.</remarks><example index="0"/><signature><![CDATA[class IValueEnumerable
    : IDescriptable
    , Description<IValueEnumerable>;
]]></signature><seealsos><symbol name="IValueEnumerable" docId="vl::reflection::description::IValueEnumerable" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueEnumerable"/></seealsos><basetypes><symbol name="Description" docId="vl::reflection::Description" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::Description"/><symbol name="IDescriptable" docId="vl::reflection::IDescriptable" declFile="GuiTypeDescriptor.h" declId="NI$vl::reflection::IDescriptable"/></basetypes></Document>