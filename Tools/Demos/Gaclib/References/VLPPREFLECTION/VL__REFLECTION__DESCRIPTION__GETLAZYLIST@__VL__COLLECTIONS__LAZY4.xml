<Document symbolId="vl::reflection::description::GetLazyList@::vl::collections::LazyList&lt;[T]&gt;(::vl::Ptr&lt;::vl::reflection::description::IValueObservableList&gt;)" accessor="" category="Function" name="GetLazyList" declFile="GuiTypeDescriptorBuilder_Container.h" declId="FB$vl::reflection::description::GetLazyList@::vl::collections::LazyList&lt;[T]&gt;(::vl::Ptr&lt;::vl::reflection::description::IValueObservableList&gt;)[impl0]"><summary>Convert a reflectable container to a lazy list to the known element type.</summary><returns>The created lazy list.</returns><typeparam name="T">The expected element type.</typeparam><param name="value">The reflectable container.</param><signature><![CDATA[template <
    typename T
>
collections::LazyList<T> GetLazyList(
    Ptr<IValueObservableList> value
);
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="LazyList" docId="vl::collections::LazyList" declFile="Operation.h" declId="NI$vl::collections::LazyList"/><symbol name="IValueObservableList" docId="vl::reflection::description::IValueObservableList" declFile="GuiTypeDescriptorPredefined.h" declId="NI$vl::reflection::description::IValueObservableList"/></seealsos></Document>