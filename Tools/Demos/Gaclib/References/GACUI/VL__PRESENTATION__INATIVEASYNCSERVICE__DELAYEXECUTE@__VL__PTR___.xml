<Document symbolId="vl::presentation::INativeAsyncService::DelayExecute@::vl::Ptr&lt;::vl::presentation::INativeDelay&gt;(::vl::Func&lt;void()&gt; const &amp;, ::vl::vint)" accessor="public" category="Function" name="DelayExecute" declFile="GuiNativeWindow.h" declId="FB$vl::presentation::INativeAsyncService::DelayExecute@::vl::Ptr&lt;::vl::presentation::INativeDelay&gt;(::vl::Func&lt;void()&gt; const &amp;, ::vl::vint)[decl0]"><summary>
 Delay execute a specified function with an specified argument asynchronisly.
 </summary><returns>The Delay execution controller for this task.</returns><param name="proc">The specified function.</param><param name="milliseconds">Time to delay.</param><signature><![CDATA[Ptr<INativeDelay> DelayExecute(
    Func<void(
)> const & proc,
    vint milliseconds
);
]]></signature><seealsos><symbol name="Func" declFile="Function.h" declId="NI$vl::Func"/><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="INativeDelay" docId="vl::presentation::INativeDelay" declFile="GuiNativeWindow.h" declId="NI$vl::presentation::INativeDelay"/><symbol name="vint" docId="vl::vint" declFile="Basic.h" declId="NI$vl::vint"/></seealsos></Document>