<Document symbolId="vl::presentation::controls::RepeatingParsingExecutor::$__ctor@(::vl::Ptr&lt;::vl::parsing::tabling::ParsingGeneralParser&gt;, ::vl::WString const &amp;, ::vl::Ptr&lt;::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer&gt;)" accessor="public" category="Function" name="$__ctor" declFile="GuiLanguageOperations.h" declId="FB$vl::presentation::controls::RepeatingParsingExecutor::$__ctor@(::vl::Ptr&lt;::vl::parsing::tabling::ParsingGeneralParser&gt;, ::vl::WString const &amp;, ::vl::Ptr&lt;::vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer&gt;)[decl0]"><summary>Initialize the parsing executor.</summary><param name="_grammarParser">Parser generated from a grammar.</param><param name="_grammarRule">The rule name to parse a complete code.</param><param name="_analyzer">The parsing analyzer to create semantic metadatas, it can be null.</param><signature><![CDATA[ RepeatingParsingExecutor(
    Ptr<parsing::tabling::ParsingGeneralParser> _grammarParser,
    WString const & _grammarRule,
    Ptr<IParsingAnalyzer> _analyzer /* optional */
);
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr" declFile="Pointer.h" declId="NI$vl::Ptr"/><symbol name="WString" docId="vl::WString" declFile="String.h" declId="NI$vl::WString"/><symbol name="ParsingGeneralParser" docId="vl::parsing::tabling::ParsingGeneralParser" declFile="Parsing.h" declId="NI$vl::parsing::tabling::ParsingGeneralParser"/><symbol name="IParsingAnalyzer" docId="vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer" declFile="GuiLanguageOperations.h" declId="NI$vl::presentation::controls::RepeatingParsingExecutor::IParsingAnalyzer"/></seealsos></Document>