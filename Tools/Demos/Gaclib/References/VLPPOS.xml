<reference>
  <namespace name="::vl">
    <document name="class ConditionVariable" docId="vl::ConditionVariable" file="VL__CONDITIONVARIABLE">
      <document name="function $__ctor" docId="vl::ConditionVariable::$__ctor@()" file="VL__CONDITIONVARIABLE__$__CTOR@()"/>
      <document name="function SleepWith" docId="vl::ConditionVariable::SleepWith@bool(::vl::CriticalSection &amp;)" file="VL__CONDITIONVARIABLE__SLEEPWITH@BOOL(__VL__CRITICALSECTION_&amp;)"/>
      <document name="function SleepWithForTime" docId="vl::ConditionVariable::SleepWithForTime@bool(::vl::CriticalSection &amp;, ::vl::vint)" file="VL__CONDITIONVARIABLE__SLEEPWITHFORTIME@BOOL(__VL__CRITICALSECTI"/>
      <document name="function SleepWithReader" docId="vl::ConditionVariable::SleepWithReader@bool(::vl::ReaderWriterLock &amp;)" file="VL__CONDITIONVARIABLE__SLEEPWITHREADER@BOOL(__VL__READERWRITERLO"/>
      <document name="function SleepWithReaderForTime" docId="vl::ConditionVariable::SleepWithReaderForTime@bool(::vl::ReaderWriterLock &amp;, ::vl::vint)" file="VL__CONDITIONVARIABLE__SLEEPWITHREADERFORTIME@BOOL(__VL__READERW"/>
      <document name="function SleepWithWriter" docId="vl::ConditionVariable::SleepWithWriter@bool(::vl::ReaderWriterLock &amp;)" file="VL__CONDITIONVARIABLE__SLEEPWITHWRITER@BOOL(__VL__READERWRITERLO"/>
      <document name="function SleepWithWriterForTime" docId="vl::ConditionVariable::SleepWithWriterForTime@bool(::vl::ReaderWriterLock &amp;, ::vl::vint)" file="VL__CONDITIONVARIABLE__SLEEPWITHWRITERFORTIME@BOOL(__VL__READERW"/>
      <document name="function WakeAllPendings" docId="vl::ConditionVariable::WakeAllPendings@void()" file="VL__CONDITIONVARIABLE__WAKEALLPENDINGS@VOID()"/>
      <document name="function WakeOnePending" docId="vl::ConditionVariable::WakeOnePending@void()" file="VL__CONDITIONVARIABLE__WAKEONEPENDING@VOID()"/>
    </document>
    <document name="class CriticalSection" docId="vl::CriticalSection" file="VL__CRITICALSECTION">
      <document name="function $__ctor" docId="vl::CriticalSection::$__ctor@()" file="VL__CRITICALSECTION__$__CTOR@()"/>
      <document name="function Enter" docId="vl::CriticalSection::Enter@void()" file="VL__CRITICALSECTION__ENTER@VOID()"/>
      <document name="function Leave" docId="vl::CriticalSection::Leave@void()" file="VL__CRITICALSECTION__LEAVE@VOID()"/>
      <document name="function TryEnter" docId="vl::CriticalSection::TryEnter@bool()" file="VL__CRITICALSECTION__TRYENTER@BOOL()"/>
    </document>
    <document name="class EventObject" docId="vl::EventObject" file="VL__EVENTOBJECT">
      <document name="function CreateAutoUnsignal" docId="vl::EventObject::CreateAutoUnsignal@bool(bool, ::vl::WString const &amp;)" file="VL__EVENTOBJECT__CREATEAUTOUNSIGNAL@BOOL(BOOL,___VL__WSTRING_CON"/>
      <document name="function CreateManualUnsignal" docId="vl::EventObject::CreateManualUnsignal@bool(bool, ::vl::WString const &amp;)" file="VL__EVENTOBJECT__CREATEMANUALUNSIGNAL@BOOL(BOOL,___VL__WSTRING_C"/>
      <document name="function Open" docId="vl::EventObject::Open@bool(bool, ::vl::WString const &amp;)" file="VL__EVENTOBJECT__OPEN@BOOL(BOOL,___VL__WSTRING_CONST_&amp;)"/>
      <document name="function Signal" docId="vl::EventObject::Signal@bool()" file="VL__EVENTOBJECT__SIGNAL@BOOL()"/>
      <document name="function Unsignal" docId="vl::EventObject::Unsignal@bool()" file="VL__EVENTOBJECT__UNSIGNAL@BOOL()"/>
    </document>
    <document name="function HttpQuery" docId="vl::HttpQuery@bool(::vl::HttpRequest const &amp;, ::vl::HttpResponse &amp;)" file="VL__HTTPQUERY@BOOL(__VL__HTTPREQUEST_CONST_&amp;,___VL__HTTPRESPONSE"/>
    <document name="class HttpRequest" docId="vl::HttpRequest" file="VL__HTTPREQUEST">
      <document name="function $__ctor" docId="vl::HttpRequest::$__ctor@()" file="VL__HTTPREQUEST__$__CTOR@()"/>
      <document name="function SetBodyUtf8" docId="vl::HttpRequest::SetBodyUtf8@void(::vl::WString const &amp;)" file="VL__HTTPREQUEST__SETBODYUTF8@VOID(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function SetHost" docId="vl::HttpRequest::SetHost@bool(::vl::WString const &amp;)" file="VL__HTTPREQUEST__SETHOST@BOOL(__VL__WSTRING_CONST_&amp;)"/>
      <document name="variable acceptTypes" docId="vl::HttpRequest::acceptTypes" file="VL__HTTPREQUEST__ACCEPTTYPES"/>
      <document name="variable body" docId="vl::HttpRequest::body" file="VL__HTTPREQUEST__BODY"/>
      <document name="variable contentType" docId="vl::HttpRequest::contentType" file="VL__HTTPREQUEST__CONTENTTYPE"/>
      <document name="variable cookie" docId="vl::HttpRequest::cookie" file="VL__HTTPREQUEST__COOKIE"/>
      <document name="variable extraHeaders" docId="vl::HttpRequest::extraHeaders" file="VL__HTTPREQUEST__EXTRAHEADERS"/>
      <document name="variable method" docId="vl::HttpRequest::method" file="VL__HTTPREQUEST__METHOD"/>
      <document name="variable password" docId="vl::HttpRequest::password" file="VL__HTTPREQUEST__PASSWORD"/>
      <document name="variable port" docId="vl::HttpRequest::port" file="VL__HTTPREQUEST__PORT"/>
      <document name="variable query" docId="vl::HttpRequest::query" file="VL__HTTPREQUEST__QUERY"/>
      <document name="variable secure" docId="vl::HttpRequest::secure" file="VL__HTTPREQUEST__SECURE"/>
      <document name="variable server" docId="vl::HttpRequest::server" file="VL__HTTPREQUEST__SERVER"/>
      <document name="variable username" docId="vl::HttpRequest::username" file="VL__HTTPREQUEST__USERNAME"/>
    </document>
    <document name="class HttpResponse" docId="vl::HttpResponse" file="VL__HTTPRESPONSE">
      <document name="function GetBodyUtf8" docId="vl::HttpResponse::GetBodyUtf8@::vl::WString()" file="VL__HTTPRESPONSE__GETBODYUTF8@__VL__WSTRING()"/>
      <document name="variable body" docId="vl::HttpResponse::body" file="VL__HTTPRESPONSE__BODY"/>
      <document name="variable cookie" docId="vl::HttpResponse::cookie" file="VL__HTTPRESPONSE__COOKIE"/>
      <document name="variable statusCode" docId="vl::HttpResponse::statusCode" file="VL__HTTPRESPONSE__STATUSCODE"/>
    </document>
    <document name="class Locale" docId="vl::Locale" file="VL__LOCALE">
      <document name="function Compare" docId="vl::Locale::Compare@::vl::vint(::vl::WString const &amp;, ::vl::WString const &amp;, ::vl::Locale::Normalization)" file="VL__LOCALE__COMPARE@__VL__VINT(__VL__WSTRING_CONST_&amp;,___VL__WSTR"/>
      <document name="function CompareOrdinal" docId="vl::Locale::CompareOrdinal@::vl::vint(::vl::WString const &amp;, ::vl::WString const &amp;)" file="VL__LOCALE__COMPAREORDINAL@__VL__VINT(__VL__WSTRING_CONST_&amp;,___V"/>
      <document name="function CompareOrdinalIgnoreCase" docId="vl::Locale::CompareOrdinalIgnoreCase@::vl::vint(::vl::WString const &amp;, ::vl::WString const &amp;)" file="VL__LOCALE__COMPAREORDINALIGNORECASE@__VL__VINT(__VL__WSTRING_CO"/>
      <document name="function EndsWith" docId="vl::Locale::EndsWith@bool(::vl::WString const &amp;, ::vl::WString const &amp;, ::vl::Locale::Normalization)" file="VL__LOCALE__ENDSWITH@BOOL(__VL__WSTRING_CONST_&amp;,___VL__WSTRING_C"/>
      <document name="function Enumerate" docId="vl::Locale::Enumerate@void(::vl::collections::List&lt;::vl::Locale&gt; &amp;)" file="VL__LOCALE__ENUMERATE@VOID(__VL__COLLECTIONS__LIST___VL__LOCALE_"/>
      <document name="function FindFirst" docId="vl::Locale::FindFirst@::vl::collections::Pair&lt;::vl::vint, ::vl::vint&gt;(::vl::WString const &amp;, ::vl::WString const &amp;, ::vl::Locale::Normalization)" file="VL__LOCALE__FINDFIRST@__VL__COLLECTIONS__PAIR___VL__VINT,___VL__"/>
      <document name="function FindLast" docId="vl::Locale::FindLast@::vl::collections::Pair&lt;::vl::vint, ::vl::vint&gt;(::vl::WString const &amp;, ::vl::WString const &amp;, ::vl::Locale::Normalization)" file="VL__LOCALE__FINDLAST@__VL__COLLECTIONS__PAIR___VL__VINT,___VL__V"/>
      <document name="function FormatCurrency" docId="vl::Locale::FormatCurrency@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__FORMATCURRENCY@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function FormatDate" docId="vl::Locale::FormatDate@::vl::WString(::vl::WString const &amp;, ::vl::DateTime)" file="VL__LOCALE__FORMATDATE@__VL__WSTRING(__VL__WSTRING_CONST_&amp;,___VL"/>
      <document name="function FormatNumber" docId="vl::Locale::FormatNumber@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__FORMATNUMBER@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function FormatTime" docId="vl::Locale::FormatTime@::vl::WString(::vl::WString const &amp;, ::vl::DateTime)" file="VL__LOCALE__FORMATTIME@__VL__WSTRING(__VL__WSTRING_CONST_&amp;,___VL"/>
      <document name="function GetLongDateFormats" docId="vl::Locale::GetLongDateFormats@void(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__LOCALE__GETLONGDATEFORMATS@VOID(__VL__COLLECTIONS__LIST___VL"/>
      <document name="function GetLongDayOfWeekName" docId="vl::Locale::GetLongDayOfWeekName@::vl::WString(::vl::vint)" file="VL__LOCALE__GETLONGDAYOFWEEKNAME@__VL__WSTRING(__VL__VINT)"/>
      <document name="function GetLongMonthName" docId="vl::Locale::GetLongMonthName@::vl::WString(::vl::vint)" file="VL__LOCALE__GETLONGMONTHNAME@__VL__WSTRING(__VL__VINT)"/>
      <document name="function GetLongTimeFormats" docId="vl::Locale::GetLongTimeFormats@void(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__LOCALE__GETLONGTIMEFORMATS@VOID(__VL__COLLECTIONS__LIST___VL"/>
      <document name="function GetName" docId="vl::Locale::GetName@::vl::WString const &amp;()" file="VL__LOCALE__GETNAME@__VL__WSTRING_CONST_&amp;()"/>
      <document name="function GetShortDateFormats" docId="vl::Locale::GetShortDateFormats@void(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__LOCALE__GETSHORTDATEFORMATS@VOID(__VL__COLLECTIONS__LIST___V"/>
      <document name="function GetShortDayOfWeekName" docId="vl::Locale::GetShortDayOfWeekName@::vl::WString(::vl::vint)" file="VL__LOCALE__GETSHORTDAYOFWEEKNAME@__VL__WSTRING(__VL__VINT)"/>
      <document name="function GetShortMonthName" docId="vl::Locale::GetShortMonthName@::vl::WString(::vl::vint)" file="VL__LOCALE__GETSHORTMONTHNAME@__VL__WSTRING(__VL__VINT)"/>
      <document name="function GetShortTimeFormats" docId="vl::Locale::GetShortTimeFormats@void(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__LOCALE__GETSHORTTIMEFORMATS@VOID(__VL__COLLECTIONS__LIST___V"/>
      <document name="function GetYearMonthDateFormats" docId="vl::Locale::GetYearMonthDateFormats@void(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__LOCALE__GETYEARMONTHDATEFORMATS@VOID(__VL__COLLECTIONS__LIST"/>
      <document name="function Invariant" docId="vl::Locale::Invariant@::vl::Locale()" file="VL__LOCALE__INVARIANT@__VL__LOCALE()"/>
      <document name="enum Normalization" docId="vl::Locale::Normalization" file="VL__LOCALE__NORMALIZATION"/>
      <document name="function StartsWith" docId="vl::Locale::StartsWith@bool(::vl::WString const &amp;, ::vl::WString const &amp;, ::vl::Locale::Normalization)" file="VL__LOCALE__STARTSWITH@BOOL(__VL__WSTRING_CONST_&amp;,___VL__WSTRING"/>
      <document name="function SystemDefault" docId="vl::Locale::SystemDefault@::vl::Locale()" file="VL__LOCALE__SYSTEMDEFAULT@__VL__LOCALE()"/>
      <document name="function ToFullWidth" docId="vl::Locale::ToFullWidth@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOFULLWIDTH@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToHalfWidth" docId="vl::Locale::ToHalfWidth@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOHALFWIDTH@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToHiragana" docId="vl::Locale::ToHiragana@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOHIRAGANA@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToKatagana" docId="vl::Locale::ToKatagana@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOKATAGANA@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToLinguisticLower" docId="vl::Locale::ToLinguisticLower@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOLINGUISTICLOWER@__VL__WSTRING(__VL__WSTRING_CONST_"/>
      <document name="function ToLinguisticUpper" docId="vl::Locale::ToLinguisticUpper@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOLINGUISTICUPPER@__VL__WSTRING(__VL__WSTRING_CONST_"/>
      <document name="function ToLower" docId="vl::Locale::ToLower@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOLOWER@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToSimplifiedChinese" docId="vl::Locale::ToSimplifiedChinese@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOSIMPLIFIEDCHINESE@__VL__WSTRING(__VL__WSTRING_CONS"/>
      <document name="function ToTileCase" docId="vl::Locale::ToTileCase@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOTILECASE@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function ToTraditionalChinese" docId="vl::Locale::ToTraditionalChinese@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOTRADITIONALCHINESE@__VL__WSTRING(__VL__WSTRING_CON"/>
      <document name="function ToUpper" docId="vl::Locale::ToUpper@::vl::WString(::vl::WString const &amp;)" file="VL__LOCALE__TOUPPER@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function UserDefault" docId="vl::Locale::UserDefault@::vl::Locale()" file="VL__LOCALE__USERDEFAULT@__VL__LOCALE()"/>
    </document>
    <document name="class Mutex" docId="vl::Mutex" file="VL__MUTEX">
      <document name="function Create" docId="vl::Mutex::Create@bool(bool, ::vl::WString const &amp;)" file="VL__MUTEX__CREATE@BOOL(BOOL,___VL__WSTRING_CONST_&amp;)"/>
      <document name="function Open" docId="vl::Mutex::Open@bool(bool, ::vl::WString const &amp;)" file="VL__MUTEX__OPEN@BOOL(BOOL,___VL__WSTRING_CONST_&amp;)"/>
      <document name="function Release" docId="vl::Mutex::Release@bool()" file="VL__MUTEX__RELEASE@BOOL()"/>
    </document>
    <document name="class ReaderWriterLock" docId="vl::ReaderWriterLock" file="VL__READERWRITERLOCK">
      <document name="function $__ctor" docId="vl::ReaderWriterLock::$__ctor@()" file="VL__READERWRITERLOCK__$__CTOR@()"/>
      <document name="function EnterReader" docId="vl::ReaderWriterLock::EnterReader@void()" file="VL__READERWRITERLOCK__ENTERREADER@VOID()"/>
      <document name="function EnterWriter" docId="vl::ReaderWriterLock::EnterWriter@void()" file="VL__READERWRITERLOCK__ENTERWRITER@VOID()"/>
      <document name="function LeaveReader" docId="vl::ReaderWriterLock::LeaveReader@void()" file="VL__READERWRITERLOCK__LEAVEREADER@VOID()"/>
      <document name="function LeaveWriter" docId="vl::ReaderWriterLock::LeaveWriter@void()" file="VL__READERWRITERLOCK__LEAVEWRITER@VOID()"/>
      <document name="function TryEnterReader" docId="vl::ReaderWriterLock::TryEnterReader@bool()" file="VL__READERWRITERLOCK__TRYENTERREADER@BOOL()"/>
      <document name="function TryEnterWriter" docId="vl::ReaderWriterLock::TryEnterWriter@bool()" file="VL__READERWRITERLOCK__TRYENTERWRITER@BOOL()"/>
    </document>
    <document name="class RepeatingTaskExecutor" docId="vl::RepeatingTaskExecutor" file="VL__REPEATINGTASKEXECUTOR">
      <document name="function $__ctor" docId="vl::RepeatingTaskExecutor::$__ctor@()" file="VL__REPEATINGTASKEXECUTOR__$__CTOR@()"/>
      <document name="function EnsureTaskFinished" docId="vl::RepeatingTaskExecutor::EnsureTaskFinished@void()" file="VL__REPEATINGTASKEXECUTOR__ENSURETASKFINISHED@VOID()"/>
      <document name="function Execute" docId="vl::RepeatingTaskExecutor::Execute@void([T] const &amp;)" file="VL__REPEATINGTASKEXECUTOR__EXECUTE@VOID([T]_CONST_&amp;)"/>
      <document name="function SubmitTask" docId="vl::RepeatingTaskExecutor::SubmitTask@void([T] const &amp;)" file="VL__REPEATINGTASKEXECUTOR__SUBMITTASK@VOID([T]_CONST_&amp;)"/>
    </document>
    <document name="class Semaphore" docId="vl::Semaphore" file="VL__SEMAPHORE">
      <document name="function Create" docId="vl::Semaphore::Create@bool(::vl::vint, ::vl::vint, ::vl::WString const &amp;)" file="VL__SEMAPHORE__CREATE@BOOL(__VL__VINT,___VL__VINT,___VL__WSTRING"/>
      <document name="function Open" docId="vl::Semaphore::Open@bool(bool, ::vl::WString const &amp;)" file="VL__SEMAPHORE__OPEN@BOOL(BOOL,___VL__WSTRING_CONST_&amp;)"/>
      <document name="function Release" docId="vl::Semaphore::Release@bool()" file="VL__SEMAPHORE__RELEASE@BOOL()"/>
      <document name="function Release" docId="vl::Semaphore::Release@::vl::vint(::vl::vint)" file="VL__SEMAPHORE__RELEASE@__VL__VINT(__VL__VINT)"/>
    </document>
    <document name="class SpinLock" docId="vl::SpinLock" file="VL__SPINLOCK">
      <document name="function $__ctor" docId="vl::SpinLock::$__ctor@()" file="VL__SPINLOCK__$__CTOR@()"/>
      <document name="function Enter" docId="vl::SpinLock::Enter@void()" file="VL__SPINLOCK__ENTER@VOID()"/>
      <document name="function Leave" docId="vl::SpinLock::Leave@void()" file="VL__SPINLOCK__LEAVE@VOID()"/>
      <document name="function TryEnter" docId="vl::SpinLock::TryEnter@bool()" file="VL__SPINLOCK__TRYENTER@BOOL()"/>
    </document>
    <document name="class Thread" docId="vl::Thread" file="VL__THREAD">
      <document name="function CreateAndStart" docId="vl::Thread::CreateAndStart@::vl::Thread *(::vl::Thread::ThreadProcedure, void *, bool)" file="VL__THREAD__CREATEANDSTART@__VL__THREAD__(__VL__THREAD__THREADPR"/>
      <document name="function CreateAndStart" docId="vl::Thread::CreateAndStart@::vl::Thread *(::vl::Func&lt;void()&gt; const &amp;, bool)" file="VL__THREAD__CREATEANDSTART@__VL__THREAD__(__VL__FUNC_VOID()__CON"/>
      <document name="function GetCPUCount" docId="vl::Thread::GetCPUCount@::vl::vint()" file="VL__THREAD__GETCPUCOUNT@__VL__VINT()"/>
      <document name="function GetCurrentThreadId" docId="vl::Thread::GetCurrentThreadId@::vl::vint()" file="VL__THREAD__GETCURRENTTHREADID@__VL__VINT()"/>
      <document name="function GetState" docId="vl::Thread::GetState@::vl::Thread::ThreadState()" file="VL__THREAD__GETSTATE@__VL__THREAD__THREADSTATE()"/>
      <document name="function Sleep" docId="vl::Thread::Sleep@void(::vl::vint)" file="VL__THREAD__SLEEP@VOID(__VL__VINT)"/>
      <document name="function Start" docId="vl::Thread::Start@bool()" file="VL__THREAD__START@BOOL()"/>
      <document name="function Stop" docId="vl::Thread::Stop@bool()" file="VL__THREAD__STOP@BOOL()"/>
      <document name="enum ThreadState" docId="vl::Thread::ThreadState" file="VL__THREAD__THREADSTATE"/>
    </document>
    <document name="class ThreadLocalStorage" docId="vl::ThreadLocalStorage" file="VL__THREADLOCALSTORAGE">
      <document name="function ClearStorages" docId="vl::ThreadLocalStorage::ClearStorages@void()" file="VL__THREADLOCALSTORAGE__CLEARSTORAGES@VOID()"/>
      <document name="function DisposeStorages" docId="vl::ThreadLocalStorage::DisposeStorages@void()" file="VL__THREADLOCALSTORAGE__DISPOSESTORAGES@VOID()"/>
      <document name="function FixStorages" docId="vl::ThreadLocalStorage::FixStorages@void()" file="VL__THREADLOCALSTORAGE__FIXSTORAGES@VOID()"/>
    </document>
    <document name="class ThreadPoolLite" docId="vl::ThreadPoolLite" file="VL__THREADPOOLLITE">
      <document name="function Queue" docId="vl::ThreadPoolLite::Queue@bool(void(void *) *, void *)" file="VL__THREADPOOLLITE__QUEUE@BOOL(VOID(VOID__)__,_VOID__)"/>
      <document name="function Queue" docId="vl::ThreadPoolLite::Queue@bool(::vl::Func&lt;void()&gt; const &amp;)" file="VL__THREADPOOLLITE__QUEUE@BOOL(__VL__FUNC_VOID()__CONST_&amp;)"/>
      <document name="function QueueLambda" docId="vl::ThreadPoolLite::QueueLambda@void([T] const &amp;)" file="VL__THREADPOOLLITE__QUEUELAMBDA@VOID([T]_CONST_&amp;)"/>
    </document>
    <document name="class ThreadVariable" docId="vl::ThreadVariable" file="VL__THREADVARIABLE">
      <document name="function $__ctor" docId="vl::ThreadVariable::$__ctor@()" file="VL__THREADVARIABLE__$__CTOR@()"/>
      <document name="function Clear" docId="vl::ThreadVariable::Clear@void()" file="VL__THREADVARIABLE__CLEAR@VOID()"/>
      <document name="function Get" docId="vl::ThreadVariable::Get@[T] &amp;()" file="VL__THREADVARIABLE__GET@[T]_&amp;()"/>
      <document name="function HasData" docId="vl::ThreadVariable::HasData@bool()" file="VL__THREADVARIABLE__HASDATA@BOOL()"/>
      <document name="function Set" docId="vl::ThreadVariable::Set@void([T] const &amp;)" file="VL__THREADVARIABLE__SET@VOID([T]_CONST_&amp;)"/>
    </document>
    <document name="function UrlEncodeQuery" docId="vl::UrlEncodeQuery@::vl::WString(::vl::WString const &amp;)" file="VL__URLENCODEQUERY@__VL__WSTRING(__VL__WSTRING_CONST_&amp;)"/>
    <document name="class WaitableObject" docId="vl::WaitableObject" file="VL__WAITABLEOBJECT">
      <document name="function IsCreated" docId="vl::WaitableObject::IsCreated@bool()" file="VL__WAITABLEOBJECT__ISCREATED@BOOL()"/>
      <document name="function Wait" docId="vl::WaitableObject::Wait@bool()" file="VL__WAITABLEOBJECT__WAIT@BOOL()"/>
      <document name="function WaitAll" docId="vl::WaitableObject::WaitAll@bool(::vl::WaitableObject * *, ::vl::vint)" file="VL__WAITABLEOBJECT__WAITALL@BOOL(__VL__WAITABLEOBJECT____,___VL_"/>
      <document name="function WaitAllForTime" docId="vl::WaitableObject::WaitAllForTime@bool(::vl::WaitableObject * *, ::vl::vint, ::vl::vint)" file="VL__WAITABLEOBJECT__WAITALLFORTIME@BOOL(__VL__WAITABLEOBJECT____"/>
      <document name="function WaitAny" docId="vl::WaitableObject::WaitAny@::vl::vint(::vl::WaitableObject * *, ::vl::vint, bool *)" file="VL__WAITABLEOBJECT__WAITANY@__VL__VINT(__VL__WAITABLEOBJECT____,"/>
      <document name="function WaitAnyForTime" docId="vl::WaitableObject::WaitAnyForTime@::vl::vint(::vl::WaitableObject * *, ::vl::vint, ::vl::vint, bool *)" file="VL__WAITABLEOBJECT__WAITANYFORTIME@__VL__VINT(__VL__WAITABLEOBJE"/>
      <document name="function WaitForTime" docId="vl::WaitableObject::WaitForTime@bool(::vl::vint)" file="VL__WAITABLEOBJECT__WAITFORTIME@BOOL(__VL__VINT)"/>
    </document>
  </namespace>
  <namespace name="::vl::filesystem">
    <document name="class File" docId="vl::filesystem::File" file="VL__FILESYSTEM__FILE">
      <document name="function $__ctor" docId="vl::filesystem::File::$__ctor@()" file="VL__FILESYSTEM__FILE__$__CTOR@()"/>
      <document name="function $__ctor" docId="vl::filesystem::File::$__ctor@(::vl::filesystem::FilePath const &amp;)" file="VL__FILESYSTEM__FILE__$__CTOR@(__VL__FILESYSTEM__FILEPATH_CONST_"/>
      <document name="function Delete" docId="vl::filesystem::File::Delete@bool()" file="VL__FILESYSTEM__FILE__DELETE@BOOL()"/>
      <document name="function Exists" docId="vl::filesystem::File::Exists@bool()" file="VL__FILESYSTEM__FILE__EXISTS@BOOL()"/>
      <document name="function GetFilePath" docId="vl::filesystem::File::GetFilePath@::vl::filesystem::FilePath const &amp;()" file="VL__FILESYSTEM__FILE__GETFILEPATH@__VL__FILESYSTEM__FILEPATH_CON"/>
      <document name="function ReadAllLinesByBom" docId="vl::filesystem::File::ReadAllLinesByBom@bool(::vl::collections::List&lt;::vl::WString&gt; &amp;)" file="VL__FILESYSTEM__FILE__READALLLINESBYBOM@BOOL(__VL__COLLECTIONS__"/>
      <document name="function ReadAllTextByBom" docId="vl::filesystem::File::ReadAllTextByBom@::vl::WString()" file="VL__FILESYSTEM__FILE__READALLTEXTBYBOM@__VL__WSTRING()"/>
      <document name="function ReadAllTextByBom" docId="vl::filesystem::File::ReadAllTextByBom@bool(::vl::WString &amp;)" file="VL__FILESYSTEM__FILE__READALLTEXTBYBOM@BOOL(__VL__WSTRING_&amp;)"/>
      <document name="function ReadAllTextWithEncodingTesting" docId="vl::filesystem::File::ReadAllTextWithEncodingTesting@bool(::vl::WString &amp;, ::vl::stream::BomEncoder::Encoding &amp;, bool &amp;)" file="VL__FILESYSTEM__FILE__READALLTEXTWITHENCODINGTESTING@BOOL(__VL__"/>
      <document name="function Rename" docId="vl::filesystem::File::Rename@bool(::vl::WString const &amp;)" file="VL__FILESYSTEM__FILE__RENAME@BOOL(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function WriteAllLines" docId="vl::filesystem::File::WriteAllLines@bool(::vl::collections::List&lt;::vl::WString&gt; &amp;, bool, ::vl::stream::BomEncoder::Encoding)" file="VL__FILESYSTEM__FILE__WRITEALLLINES@BOOL(__VL__COLLECTIONS__LIST"/>
      <document name="function WriteAllText" docId="vl::filesystem::File::WriteAllText@bool(::vl::WString const &amp;, bool, ::vl::stream::BomEncoder::Encoding)" file="VL__FILESYSTEM__FILE__WRITEALLTEXT@BOOL(__VL__WSTRING_CONST_&amp;,_B"/>
    </document>
    <document name="class FilePath" docId="vl::filesystem::FilePath" file="VL__FILESYSTEM__FILEPATH">
      <document name="function $__ctor" docId="vl::filesystem::FilePath::$__ctor@()" file="VL__FILESYSTEM__FILEPATH__$__CTOR@()"/>
      <document name="function $__ctor" docId="vl::filesystem::FilePath::$__ctor@(::vl::WString const &amp;)" file="VL__FILESYSTEM__FILEPATH__$__CTOR@(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function $__ctor" docId="vl::filesystem::FilePath::$__ctor@(wchar_t const *)" file="VL__FILESYSTEM__FILEPATH__$__CTOR@(WCHAR_T_CONST__)"/>
      <document name="function $__ctor" docId="vl::filesystem::FilePath::$__ctor@(::vl::filesystem::FilePath const &amp;)" file="VL__FILESYSTEM__FILEPATH__$__CTOR@(__VL__FILESYSTEM__FILEPATH_CO"/>
      <document name="function GetFolder" docId="vl::filesystem::FilePath::GetFolder@::vl::filesystem::FilePath()" file="VL__FILESYSTEM__FILEPATH__GETFOLDER@__VL__FILESYSTEM__FILEPATH()"/>
      <document name="function GetFullPath" docId="vl::filesystem::FilePath::GetFullPath@::vl::WString()" file="VL__FILESYSTEM__FILEPATH__GETFULLPATH@__VL__WSTRING()"/>
      <document name="function GetName" docId="vl::filesystem::FilePath::GetName@::vl::WString()" file="VL__FILESYSTEM__FILEPATH__GETNAME@__VL__WSTRING()"/>
      <document name="function GetRelativePathFor" docId="vl::filesystem::FilePath::GetRelativePathFor@::vl::WString(::vl::filesystem::FilePath const &amp;)" file="VL__FILESYSTEM__FILEPATH__GETRELATIVEPATHFOR@__VL__WSTRING(__VL_"/>
      <document name="function IsFile" docId="vl::filesystem::FilePath::IsFile@bool()" file="VL__FILESYSTEM__FILEPATH__ISFILE@BOOL()"/>
      <document name="function IsFolder" docId="vl::filesystem::FilePath::IsFolder@bool()" file="VL__FILESYSTEM__FILEPATH__ISFOLDER@BOOL()"/>
      <document name="function IsRoot" docId="vl::filesystem::FilePath::IsRoot@bool()" file="VL__FILESYSTEM__FILEPATH__ISROOT@BOOL()"/>
      <document name="function operator /" docId="vl::filesystem::FilePath::operator /@::vl::filesystem::FilePath(::vl::WString const &amp;)" file="VL__FILESYSTEM__FILEPATH__OPERATOR__@__VL__FILESYSTEM__FILEPATH("/>
    </document>
    <document name="class Folder" docId="vl::filesystem::Folder" file="VL__FILESYSTEM__FOLDER">
      <document name="function $__ctor" docId="vl::filesystem::Folder::$__ctor@()" file="VL__FILESYSTEM__FOLDER__$__CTOR@()"/>
      <document name="function $__ctor" docId="vl::filesystem::Folder::$__ctor@(::vl::filesystem::FilePath const &amp;)" file="VL__FILESYSTEM__FOLDER__$__CTOR@(__VL__FILESYSTEM__FILEPATH_CONS"/>
      <document name="function Create" docId="vl::filesystem::Folder::Create@bool(bool)" file="VL__FILESYSTEM__FOLDER__CREATE@BOOL(BOOL)"/>
      <document name="function Delete" docId="vl::filesystem::Folder::Delete@bool(bool)" file="VL__FILESYSTEM__FOLDER__DELETE@BOOL(BOOL)"/>
      <document name="function Exists" docId="vl::filesystem::Folder::Exists@bool()" file="VL__FILESYSTEM__FOLDER__EXISTS@BOOL()"/>
      <document name="function GetFilePath" docId="vl::filesystem::Folder::GetFilePath@::vl::filesystem::FilePath const &amp;()" file="VL__FILESYSTEM__FOLDER__GETFILEPATH@__VL__FILESYSTEM__FILEPATH_C"/>
      <document name="function GetFiles" docId="vl::filesystem::Folder::GetFiles@bool(::vl::collections::List&lt;::vl::filesystem::File&gt; &amp;)" file="VL__FILESYSTEM__FOLDER__GETFILES@BOOL(__VL__COLLECTIONS__LIST___"/>
      <document name="function GetFolders" docId="vl::filesystem::Folder::GetFolders@bool(::vl::collections::List&lt;::vl::filesystem::Folder&gt; &amp;)" file="VL__FILESYSTEM__FOLDER__GETFOLDERS@BOOL(__VL__COLLECTIONS__LIST_"/>
      <document name="function Rename" docId="vl::filesystem::Folder::Rename@bool(::vl::WString const &amp;)" file="VL__FILESYSTEM__FOLDER__RENAME@BOOL(__VL__WSTRING_CONST_&amp;)"/>
    </document>
  </namespace>
  <namespace name="::vl::stream">
    <document name="class BomDecoder" docId="vl::stream::BomDecoder" file="VL__STREAM__BOMDECODER">
      <document name="function $__ctor" docId="vl::stream::BomDecoder::$__ctor@()" file="VL__STREAM__BOMDECODER__$__CTOR@()"/>
    </document>
    <document name="class BomEncoder" docId="vl::stream::BomEncoder" file="VL__STREAM__BOMENCODER">
      <document name="function $__ctor" docId="vl::stream::BomEncoder::$__ctor@(::vl::stream::BomEncoder::Encoding)" file="VL__STREAM__BOMENCODER__$__CTOR@(__VL__STREAM__BOMENCODER__ENCOD"/>
      <document name="enum Encoding" docId="vl::stream::BomEncoder::Encoding" file="VL__STREAM__BOMENCODER__ENCODING"/>
    </document>
    <document name="class BroadcastStream" docId="vl::stream::BroadcastStream" file="VL__STREAM__BROADCASTSTREAM">
      <document name="function $__ctor" docId="vl::stream::BroadcastStream::$__ctor@()" file="VL__STREAM__BROADCASTSTREAM__$__CTOR@()"/>
      <document name="function Targets" docId="vl::stream::BroadcastStream::Targets@::vl::stream::BroadcastStream::StreamList &amp;()" file="VL__STREAM__BROADCASTSTREAM__TARGETS@__VL__STREAM__BROADCASTSTRE"/>
    </document>
    <document name="class CacheStream" docId="vl::stream::CacheStream" file="VL__STREAM__CACHESTREAM">
      <document name="function $__ctor" docId="vl::stream::CacheStream::$__ctor@(::vl::stream::IStream &amp;, ::vl::vint)" file="VL__STREAM__CACHESTREAM__$__CTOR@(__VL__STREAM__ISTREAM_&amp;,___VL_"/>
    </document>
    <document name="class CharDecoder" docId="vl::stream::CharDecoder" file="VL__STREAM__CHARDECODER"/>
    <document name="class CharEncoder" docId="vl::stream::CharEncoder" file="VL__STREAM__CHARENCODER"/>
    <document name="class DecoderStream" docId="vl::stream::DecoderStream" file="VL__STREAM__DECODERSTREAM">
      <document name="function $__ctor" docId="vl::stream::DecoderStream::$__ctor@(::vl::stream::IStream &amp;, ::vl::stream::IDecoder &amp;)" file="VL__STREAM__DECODERSTREAM__$__CTOR@(__VL__STREAM__ISTREAM_&amp;,___V"/>
    </document>
    <document name="class EncoderStream" docId="vl::stream::EncoderStream" file="VL__STREAM__ENCODERSTREAM">
      <document name="function $__ctor" docId="vl::stream::EncoderStream::$__ctor@(::vl::stream::IStream &amp;, ::vl::stream::IEncoder &amp;)" file="VL__STREAM__ENCODERSTREAM__$__CTOR@(__VL__STREAM__ISTREAM_&amp;,___V"/>
    </document>
    <document name="class FileStream" docId="vl::stream::FileStream" file="VL__STREAM__FILESTREAM">
      <document name="function $__ctor" docId="vl::stream::FileStream::$__ctor@(::vl::WString const &amp;, ::vl::stream::FileStream::AccessRight)" file="VL__STREAM__FILESTREAM__$__CTOR@(__VL__WSTRING_CONST_&amp;,___VL__ST"/>
      <document name="enum AccessRight" docId="vl::stream::FileStream::AccessRight" file="VL__STREAM__FILESTREAM__ACCESSRIGHT"/>
    </document>
    <document name="class IDecoder" docId="vl::stream::IDecoder" file="VL__STREAM__IDECODER">
      <document name="function Close" docId="vl::stream::IDecoder::Close@void()" file="VL__STREAM__IDECODER__CLOSE@VOID()"/>
      <document name="function Read" docId="vl::stream::IDecoder::Read@::vl::vint(void *, ::vl::vint)" file="VL__STREAM__IDECODER__READ@__VL__VINT(VOID__,___VL__VINT)"/>
      <document name="function Setup" docId="vl::stream::IDecoder::Setup@void(::vl::stream::IStream *)" file="VL__STREAM__IDECODER__SETUP@VOID(__VL__STREAM__ISTREAM__)"/>
    </document>
    <document name="class IEncoder" docId="vl::stream::IEncoder" file="VL__STREAM__IENCODER">
      <document name="function Close" docId="vl::stream::IEncoder::Close@void()" file="VL__STREAM__IENCODER__CLOSE@VOID()"/>
      <document name="function Setup" docId="vl::stream::IEncoder::Setup@void(::vl::stream::IStream *)" file="VL__STREAM__IENCODER__SETUP@VOID(__VL__STREAM__ISTREAM__)"/>
      <document name="function Write" docId="vl::stream::IEncoder::Write@::vl::vint(void *, ::vl::vint)" file="VL__STREAM__IENCODER__WRITE@__VL__VINT(VOID__,___VL__VINT)"/>
    </document>
    <document name="class IStream" docId="vl::stream::IStream" file="VL__STREAM__ISTREAM">
      <document name="function CanPeek" docId="vl::stream::IStream::CanPeek@bool()" file="VL__STREAM__ISTREAM__CANPEEK@BOOL()"/>
      <document name="function CanRead" docId="vl::stream::IStream::CanRead@bool()" file="VL__STREAM__ISTREAM__CANREAD@BOOL()"/>
      <document name="function CanSeek" docId="vl::stream::IStream::CanSeek@bool()" file="VL__STREAM__ISTREAM__CANSEEK@BOOL()"/>
      <document name="function CanWrite" docId="vl::stream::IStream::CanWrite@bool()" file="VL__STREAM__ISTREAM__CANWRITE@BOOL()"/>
      <document name="function Close" docId="vl::stream::IStream::Close@void()" file="VL__STREAM__ISTREAM__CLOSE@VOID()"/>
      <document name="function IsAvailable" docId="vl::stream::IStream::IsAvailable@bool()" file="VL__STREAM__ISTREAM__ISAVAILABLE@BOOL()"/>
      <document name="function IsLimited" docId="vl::stream::IStream::IsLimited@bool()" file="VL__STREAM__ISTREAM__ISLIMITED@BOOL()"/>
      <document name="function Peek" docId="vl::stream::IStream::Peek@::vl::vint(void *, ::vl::vint)" file="VL__STREAM__ISTREAM__PEEK@__VL__VINT(VOID__,___VL__VINT)"/>
      <document name="function Position" docId="vl::stream::IStream::Position@::vl::pos_t()" file="VL__STREAM__ISTREAM__POSITION@__VL__POS_T()"/>
      <document name="function Read" docId="vl::stream::IStream::Read@::vl::vint(void *, ::vl::vint)" file="VL__STREAM__ISTREAM__READ@__VL__VINT(VOID__,___VL__VINT)"/>
      <document name="function Seek" docId="vl::stream::IStream::Seek@void(::vl::pos_t)" file="VL__STREAM__ISTREAM__SEEK@VOID(__VL__POS_T)"/>
      <document name="function SeekFromBegin" docId="vl::stream::IStream::SeekFromBegin@void(::vl::pos_t)" file="VL__STREAM__ISTREAM__SEEKFROMBEGIN@VOID(__VL__POS_T)"/>
      <document name="function SeekFromEnd" docId="vl::stream::IStream::SeekFromEnd@void(::vl::pos_t)" file="VL__STREAM__ISTREAM__SEEKFROMEND@VOID(__VL__POS_T)"/>
      <document name="function Size" docId="vl::stream::IStream::Size@::vl::pos_t()" file="VL__STREAM__ISTREAM__SIZE@__VL__POS_T()"/>
      <document name="function Write" docId="vl::stream::IStream::Write@::vl::vint(void *, ::vl::vint)" file="VL__STREAM__ISTREAM__WRITE@__VL__VINT(VOID__,___VL__VINT)"/>
    </document>
    <document name="class LzwDecoder" docId="vl::stream::LzwDecoder" file="VL__STREAM__LZWDECODER">
      <document name="function $__ctor" docId="vl::stream::LzwDecoder::$__ctor@()" file="VL__STREAM__LZWDECODER__$__CTOR@()"/>
      <document name="function $__ctor" docId="vl::stream::LzwDecoder::$__ctor@(bool [*] &amp;)" file="VL__STREAM__LZWDECODER__$__CTOR@(BOOL_[_]_&amp;)"/>
    </document>
    <document name="class LzwEncoder" docId="vl::stream::LzwEncoder" file="VL__STREAM__LZWENCODER">
      <document name="function $__ctor" docId="vl::stream::LzwEncoder::$__ctor@()" file="VL__STREAM__LZWENCODER__$__CTOR@()"/>
      <document name="function $__ctor" docId="vl::stream::LzwEncoder::$__ctor@(bool [*] &amp;)" file="VL__STREAM__LZWENCODER__$__CTOR@(BOOL_[_]_&amp;)"/>
    </document>
    <document name="class MbcsDecoder" docId="vl::stream::MbcsDecoder" file="VL__STREAM__MBCSDECODER"/>
    <document name="class MbcsEncoder" docId="vl::stream::MbcsEncoder" file="VL__STREAM__MBCSENCODER"/>
    <document name="class MemoryStream" docId="vl::stream::MemoryStream" file="VL__STREAM__MEMORYSTREAM">
      <document name="function $__ctor" docId="vl::stream::MemoryStream::$__ctor@(::vl::vint)" file="VL__STREAM__MEMORYSTREAM__$__CTOR@(__VL__VINT)"/>
    </document>
    <document name="class MemoryWrapperStream" docId="vl::stream::MemoryWrapperStream" file="VL__STREAM__MEMORYWRAPPERSTREAM">
      <document name="function $__ctor" docId="vl::stream::MemoryWrapperStream::$__ctor@(void *, ::vl::vint)" file="VL__STREAM__MEMORYWRAPPERSTREAM__$__CTOR@(VOID__,___VL__VINT)"/>
    </document>
    <document name="class RecorderStream" docId="vl::stream::RecorderStream" file="VL__STREAM__RECORDERSTREAM">
      <document name="function $__ctor" docId="vl::stream::RecorderStream::$__ctor@(::vl::stream::IStream &amp;, ::vl::stream::IStream &amp;)" file="VL__STREAM__RECORDERSTREAM__$__CTOR@(__VL__STREAM__ISTREAM_&amp;,___"/>
    </document>
    <document name="class StreamReader" docId="vl::stream::StreamReader" file="VL__STREAM__STREAMREADER">
      <document name="function $__ctor" docId="vl::stream::StreamReader::$__ctor@(::vl::stream::IStream &amp;)" file="VL__STREAM__STREAMREADER__$__CTOR@(__VL__STREAM__ISTREAM_&amp;)"/>
    </document>
    <document name="class StreamWriter" docId="vl::stream::StreamWriter" file="VL__STREAM__STREAMWRITER">
      <document name="function $__ctor" docId="vl::stream::StreamWriter::$__ctor@(::vl::stream::IStream &amp;)" file="VL__STREAM__STREAMWRITER__$__CTOR@(__VL__STREAM__ISTREAM_&amp;)"/>
    </document>
    <document name="class StringReader" docId="vl::stream::StringReader" file="VL__STREAM__STRINGREADER">
      <document name="function $__ctor" docId="vl::stream::StringReader::$__ctor@(::vl::WString const &amp;)" file="VL__STREAM__STRINGREADER__$__CTOR@(__VL__WSTRING_CONST_&amp;)"/>
    </document>
    <document name="function TestEncoding" docId="vl::stream::TestEncoding@void(unsigned char *, ::vl::vint, ::vl::stream::BomEncoder::Encoding &amp;, bool &amp;)" file="VL__STREAM__TESTENCODING@VOID(UNSIGNED_CHAR__,___VL__VINT,___VL_"/>
    <document name="class TextReader" docId="vl::stream::TextReader" file="VL__STREAM__TEXTREADER">
      <document name="function IsEnd" docId="vl::stream::TextReader::IsEnd@bool()" file="VL__STREAM__TEXTREADER__ISEND@BOOL()"/>
      <document name="function ReadChar" docId="vl::stream::TextReader::ReadChar@wchar_t()" file="VL__STREAM__TEXTREADER__READCHAR@WCHAR_T()"/>
      <document name="function ReadLine" docId="vl::stream::TextReader::ReadLine@::vl::WString()" file="VL__STREAM__TEXTREADER__READLINE@__VL__WSTRING()"/>
      <document name="function ReadString" docId="vl::stream::TextReader::ReadString@::vl::WString(::vl::vint)" file="VL__STREAM__TEXTREADER__READSTRING@__VL__WSTRING(__VL__VINT)"/>
      <document name="function ReadToEnd" docId="vl::stream::TextReader::ReadToEnd@::vl::WString()" file="VL__STREAM__TEXTREADER__READTOEND@__VL__WSTRING()"/>
    </document>
    <document name="class TextWriter" docId="vl::stream::TextWriter" file="VL__STREAM__TEXTWRITER">
      <document name="function WriteChar" docId="vl::stream::TextWriter::WriteChar@void(wchar_t)" file="VL__STREAM__TEXTWRITER__WRITECHAR@VOID(WCHAR_T)"/>
      <document name="function WriteLine" docId="vl::stream::TextWriter::WriteLine@void(wchar_t const *, ::vl::vint)" file="VL__STREAM__TEXTWRITER__WRITELINE@VOID(WCHAR_T_CONST__,___VL__VI"/>
      <document name="function WriteLine" docId="vl::stream::TextWriter::WriteLine@void(wchar_t const *)" file="VL__STREAM__TEXTWRITER__WRITELINE@VOID(WCHAR_T_CONST__)"/>
      <document name="function WriteLine" docId="vl::stream::TextWriter::WriteLine@void(::vl::WString const &amp;)" file="VL__STREAM__TEXTWRITER__WRITELINE@VOID(__VL__WSTRING_CONST_&amp;)"/>
      <document name="function WriteString" docId="vl::stream::TextWriter::WriteString@void(wchar_t const *, ::vl::vint)" file="VL__STREAM__TEXTWRITER__WRITESTRING@VOID(WCHAR_T_CONST__,___VL__"/>
      <document name="function WriteString" docId="vl::stream::TextWriter::WriteString@void(wchar_t const *)" file="VL__STREAM__TEXTWRITER__WRITESTRING@VOID(WCHAR_T_CONST__)"/>
      <document name="function WriteString" docId="vl::stream::TextWriter::WriteString@void(::vl::WString const &amp;)" file="VL__STREAM__TEXTWRITER__WRITESTRING@VOID(__VL__WSTRING_CONST_&amp;)"/>
    </document>
    <document name="class Utf16BEDecoder" docId="vl::stream::Utf16BEDecoder" file="VL__STREAM__UTF16BEDECODER"/>
    <document name="class Utf16BEEncoder" docId="vl::stream::Utf16BEEncoder" file="VL__STREAM__UTF16BEENCODER"/>
    <document name="class Utf16Decoder" docId="vl::stream::Utf16Decoder" file="VL__STREAM__UTF16DECODER"/>
    <document name="class Utf16Encoder" docId="vl::stream::Utf16Encoder" file="VL__STREAM__UTF16ENCODER"/>
    <document name="class Utf8Decoder" docId="vl::stream::Utf8Decoder" file="VL__STREAM__UTF8DECODER"/>
    <document name="class Utf8Encoder" docId="vl::stream::Utf8Encoder" file="VL__STREAM__UTF8ENCODER"/>
  </namespace>
</reference>
