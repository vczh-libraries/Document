<Document accessor="" category="Class" name="SpinLock" declFile="Threading.h" declId="NI$vl::SpinLock"><summary>
 Spin lock. It is similar to mutex, but it does not occupy resource in the system.
 The macro &quot;SPIN_LOCK&quot; is recommended instead of calling <symbol name="Enter" docId="vl::SpinLock::Enter@void()" declFile="Threading.h" declId="FB$vl::SpinLock::Enter@void()[decl0]"/> and <symbol name="Leave" docId="vl::SpinLock::Leave@void()" declFile="Threading.h" declId="FB$vl::SpinLock::Leave@void()[decl0]"/> like this:
 <program><code><![CDATA[
 SPIN_LOCK(yourLock)
 {
     // do something
 }
 ]]></code></program></summary><signature><![CDATA[class SpinLock
    : Object
    , NotCopyable;
]]></signature><basetypes><symbol name="NotCopyable" docId="vl::NotCopyable" declFile="Basic.h" declId="NI$vl::NotCopyable"/><symbol name="Object" docId="vl::Object" declFile="Basic.h" declId="NI$vl::Object"/></basetypes></Document>