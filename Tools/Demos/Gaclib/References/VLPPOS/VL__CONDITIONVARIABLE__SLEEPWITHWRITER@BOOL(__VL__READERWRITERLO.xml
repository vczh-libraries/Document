<Document symbolId="vl::ConditionVariable::SleepWithWriter@bool(::vl::ReaderWriterLock &amp;)" accessor="public" category="Function" name="SleepWithWriter" declFile="Threading.h" declId="FB$vl::ConditionVariable::SleepWithWriter@bool(::vl::ReaderWriterLock &amp;)[decl0]"><summary>Bind a conditional variable with a owned writer lock and release it. When the function returns, the condition variable is activated, and the current thread owned the writer lock again. This function is only available in Windows.</summary><returns>Returns true if this operation succeeded.</returns><param name="lock">The writer lock.</param><signature><![CDATA[bool SleepWithWriter(
    ReaderWriterLock & lock
);
]]></signature><seealsos><symbol name="ReaderWriterLock" docId="vl::ReaderWriterLock" declFile="Threading.h" declId="NI$vl::ReaderWriterLock"/></seealsos></Document>