<Document symbolId="vl::ReaderWriterLock" accessor="" category="Class" name="ReaderWriterLock" declFile="Threading.h" declId="NI$vl::ReaderWriterLock"><summary><![CDATA[
 Reader writer lock.
 The macro "READER_LOCK" and "WRITER_LOCK" are encouraged to use instead of calling ]]><symbol name="EnterReader" docId="vl::ReaderWriterLock::EnterReader@void()" declFile="Threading.h" declId="FB$vl::ReaderWriterLock::EnterReader@void()[decl0]"/><![CDATA[, ]]><symbol name="LeaveReader" docId="vl::ReaderWriterLock::LeaveReader@void()" declFile="Threading.h" declId="FB$vl::ReaderWriterLock::LeaveReader@void()[decl0]"/><![CDATA[, ]]><symbol name="EnterWriter" docId="vl::ReaderWriterLock::EnterWriter@void()" declFile="Threading.h" declId="FB$vl::ReaderWriterLock::EnterWriter@void()[decl0]"/><![CDATA[ and ]]><symbol name="LeaveWriter" docId="vl::ReaderWriterLock::LeaveWriter@void()" declFile="Threading.h" declId="FB$vl::ReaderWriterLock::LeaveWriter@void()[decl0]"/><![CDATA[ like this:
 READER_LOCK(yourLock)
 {
		<code>
 }
 or
 WRITER_LOCK(yourLock)
 {
		<code>
 }
 ]]></summary><signature><![CDATA[class ReaderWriterLock
    : Object
    , NotCopyable;
]]></signature><basetypes><symbol name="NotCopyable" declFile="Basic.h" declId="NI$vl::NotCopyable"/><symbol name="Object" docId="vl::Object" declFile="Basic.h" declId="NI$vl::Object"/></basetypes></Document>