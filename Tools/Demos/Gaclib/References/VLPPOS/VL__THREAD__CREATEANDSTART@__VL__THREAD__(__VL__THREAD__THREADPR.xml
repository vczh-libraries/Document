<Document symbolId="vl::Thread::CreateAndStart@::vl::Thread *(::vl::Thread::ThreadProcedure, void *, bool)" accessor="public" category="Function" name="CreateAndStart" declFile="Threading.h" declId="FB$vl::Thread::CreateAndStart@::vl::Thread *(::vl::Thread::ThreadProcedure, void *, bool)[decl0]"><summary>Create a thread using a function pointer.</summary><returns>Returns the created thread.</returns><param name="procedure">The function pointer.</param><param name="argument">The argument to call the function pointer.</param><param name="deleteAfterStopped">Set to true (by default) to make the thread delete itself after the job is done. If you set this argument to true, you are not recommended to touch the returned thread pointer in any way.</param><signature><![CDATA[static Thread * CreateAndStart(
    ThreadProcedure procedure,
    void * argument /* optional */,
    bool deleteAfterStopped /* optional */
);
]]></signature><seealsos><symbol name="Thread" docId="vl::Thread" declFile="Threading.h" declId="NI$vl::Thread"/><symbol name="ThreadProcedure" declFile="Threading.h" declId="NI$vl::Thread::ThreadProcedure"/></seealsos></Document>