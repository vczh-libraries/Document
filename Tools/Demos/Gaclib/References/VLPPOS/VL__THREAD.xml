<Document symbolId="vl::Thread" accessor="" category="Class" name="Thread"><summary>Representing a thread. <symbols><symbol name="CreateAndStart" docId="vl::Thread::CreateAndStart@::vl::Thread *(::vl::Thread::ThreadProcedure, void *, bool)" declFile="Threading.h" declId="FB$vl::Thread::CreateAndStart@::vl::Thread *(::vl::Thread::ThreadProcedure, void *, bool)[decl0]"/><symbol name="CreateAndStart" docId="vl::Thread::CreateAndStart@::vl::Thread *(::vl::Func&lt;void()&gt; const &amp;, bool)" declFile="Threading.h" declId="FB$vl::Thread::CreateAndStart@::vl::Thread *(::vl::Func&lt;void()&gt; const &amp;, bool)[decl0]"/></symbols> is the suggested way to create threads.</summary><signature><![CDATA[class Thread
    : WaitableObject;
]]></signature><basetypes><symbol name="WaitableObject" docId="vl::WaitableObject" declFile="Threading.h" declId="NI$vl::WaitableObject"/></basetypes></Document>