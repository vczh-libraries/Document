<Document symbolId="vl::parsing::ParsingTreeNode::FindDeepestNode@::vl::parsing::ParsingTreeNode *(::vl::parsing::ParsingTextRange const &amp;)" accessor="public" category="Function" name="FindDeepestNode"><summary>Find a most deepest indirect child node at the range. Using this function requires running <symbol docId="vl::parsing::ParsingTreeNode::InitializeQueryCache@void()" declFile="ParsingTree.h" declId="FB$vl::parsing::ParsingTreeNode::InitializeQueryCache@void()[decl0]"/> before.</summary><returns>The found node.</returns><param name="range">The range.</param><signature><![CDATA[ParsingTreeNode *(ParsingTextRange const &);
]]></signature></Document>