<Document accessor="public" category="Function" name="Parse"><summary>Parse an input and get an abstract syntax tree if no error happens or all errors are recovered.</summary><returns>The abstract syntax tree.</returns><param name="input">The input to parse.</param><param name="rule">The name of the rule that used to parse the input.</param><param name="errors">Returns all errors.</param><param name="codeIndex">The code index to differentiate each input. This value will be stored in every tokens and abstract syntax nodes.</param><signature><![CDATA[Ptr<ParsingTreeNode> Parse(
    WString const & input,
    WString const & rule,
    collections::List<Ptr<ParsingError>> & errors,
    vint codeIndex /* optional */
);
]]></signature><seealsos><symbol name="Ptr" docId="vl::Ptr"/><symbol name="WString" docId="vl::WString"/><symbol name="List" docId="vl::collections::List"/><symbol name="ParsingError" docId="vl::parsing::ParsingError"/><symbol name="ParsingTreeNode" docId="vl::parsing::ParsingTreeNode"/><symbol name="vint" docId="vl::vint"/></seealsos></Document>