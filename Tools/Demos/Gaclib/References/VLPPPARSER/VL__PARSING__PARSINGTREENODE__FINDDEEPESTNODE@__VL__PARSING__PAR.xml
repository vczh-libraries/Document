<Document accessor="public" category="Function" name="FindDeepestNode" declFile="ParsingTree.h" declId="FB$vl::parsing::ParsingTreeNode::FindDeepestNode@::vl::parsing::ParsingTreeNode *(::vl::parsing::ParsingTextPos const &amp;)[decl0]"><summary>Find a most deepest indirect child node at the position. Using this function requires <symbol name="InitializeQueryCache" docId="vl::parsing::ParsingTreeNode::InitializeQueryCache@void()" declFile="ParsingTree.h" declId="FB$vl::parsing::ParsingTreeNode::InitializeQueryCache@void()[decl0]"/> to be called.</summary><returns>The found node.</returns><param name="position">The position.</param><signature><![CDATA[ParsingTreeNode * FindDeepestNode(
    ParsingTextPos const & position
);
]]></signature><seealsos><symbol name="ParsingTextPos" docId="vl::parsing::ParsingTextPos" declFile="ParsingTree.h" declId="NI$vl::parsing::ParsingTextPos"/><symbol name="ParsingTreeNode" docId="vl::parsing::ParsingTreeNode" declFile="ParsingTree.h" declId="NI$vl::parsing::ParsingTreeNode"/></seealsos></Document>