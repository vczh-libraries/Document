<Document accessor="public" category="Function" name="Walk"><summary>Step forward by one character.</summary><param name="input">The input character.</param><param name="state">The current state. Returns the new current state when this function returns.</param><param name="token">Returns the token index at the end of the token.</param><param name="finalState">Returns true if it reach the end of the token.</param><param name="previousTokenStop">Returns true if the previous character is the end of the token.</param><remarks><p>
 The &quot;finalState&quot; argument is important.
 When &quot;previousTokenStop&quot; becomes true,
 it tells you that this character can no longer form a token with previous consumed characters.
 But it does not mean that the recognized token ends at the previous token.
 The recognized token could end eariler,
 which is indiated at the last time when &quot;finalState&quot; becomes true.
 </p><p>
 See the example for <symbol name="RegexLexerWalker" docId="vl::regex::RegexLexerWalker"/> about how to use this function.
 </p></remarks><signature><![CDATA[void Walk(
    wchar_t input,
    vint & state,
    vint & token,
    bool & finalState,
    bool & previousTokenStop
) const;
]]></signature><seealsos><symbol name="vint" docId="vl::vint"/></seealsos></Document>