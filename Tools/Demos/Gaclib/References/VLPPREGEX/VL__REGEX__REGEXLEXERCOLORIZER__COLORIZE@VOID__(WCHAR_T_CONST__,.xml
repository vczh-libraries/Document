<Document symbolId="vl::regex::RegexLexerColorizer::Colorize@void *(wchar_t const *, ::vl::vint)" accessor="public" category="Function" name="Colorize" declFile="Regex.h" declId="FB$vl::regex::RegexLexerColorizer::Colorize@void *(wchar_t const *, ::vl::vint)[decl0]"><summary>Colorize a text.</summary><returns>An inter token state at the end of this line. It could be the same object to which is returned from the previous call.</returns><param name="input">The text to colorize.</param><param name="length">Size of the text in characters.</param><remarks><p>See <symbol name="interTokenState" docId="vl::regex::RegexProcessingToken::interTokenState" declFile="Regex.h" declId="NI$vl::regex::RegexProcessingToken::interTokenState"/> and <symbol name="extendProc" docId="vl::regex::RegexProc::extendProc" declFile="Regex.h" declId="NI$vl::regex::RegexProc::extendProc"/> for more information about the return value.</p><p>Callbacks in <symbol name="RegexProc" docId="vl::regex::RegexProc" declFile="Regex.h" declId="NI$vl::regex::RegexProc"/> will be called, which is from the second argument of the constructor of <symbol name="RegexLexer" docId="vl::regex::RegexLexer" declFile="Regex.h" declId="NI$vl::regex::RegexLexer"/>.</p></remarks><signature><![CDATA[void * Colorize(
    wchar_t const * input,
    vint length
);
]]></signature><seealsos><symbol name="vint" docId="vl::vint" declFile="Basic.h" declId="NI$vl::vint"/></seealsos></Document>